shared:
  upscale: &upscale 4  # 2, 4, 8
  patch_size: &patch_size 128  # 40, 64, 96, 128, 192

model:
  _key_value: true

  &generator_model generator:
    _target_: esrgan.model.EncoderDecoderNet
    encoder:
      _target_: esrgan.model.module.ESREncoder
      in_channels: &num_channels 3
      out_channels: &latent_channels 64
      num_basic_blocks: 16
      growth_channels: 32
      activation: &activation
        _mode_: partial
        _target_: torch.nn.LeakyReLU
        negative_slope: 0.2
        inplace: true
      residual_scaling: 0.2
    decoder:
      _target_: esrgan.model.module.SRResNetDecoder
      in_channels: *latent_channels
      out_channels: *num_channels
      scale_factor: *upscale
      activation: *activation

  &discriminator_model discriminator:
    _target_: esrgan.model.VGGConv
    encoder:
      _target_: esrgan.model.module.StridedConvEncoder
    pool:
      _target_: catalyst.contrib.layers.AdaptiveAvgPool2d
      output_size: [7,7]
    head:
      _target_: esrgan.model.module.LinearHead
      in_channels: 25088  # 512 * (7x7)
      out_channels: 1
      latent_channels: [1024]

args:
  logdir: ./logs/cata21.06/14-esrgan_x4_192ps

runner:
  _target_: esrgan.runner.GANConfigRunner
  generator_key: *generator_model
  discriminator_key: *discriminator_model

stages:
  stage1_supervised:
    num_epochs: 40

    loaders: &loaders
      train: &train_loader
        _target_: torch.utils.data.DataLoader
        dataset: &train_dataset
          _target_: esrgan.dataset.DIV2KDataset
          root: data
          train: true
          target_type: bicubic_X4
          patch_size: [*patch_size,*patch_size]
          transform:
            _target_: albumentations.Compose
            transforms:
              - &spatial_transforms
                _target_: albumentations.Compose
                transforms:
                  - _target_: albumentations.HorizontalFlip
                    p: 0.5
                additional_targets:
                  real_image: image
              - &hard_transforms
                _target_: albumentations.Compose
                transforms:
                  - _target_: albumentations.CoarseDropout
                    max_holes: 2
                    max_height: 2
                    max_width: 2
                  - _target_: albumentations.ImageCompression
                    quality_lower: 65
                    p: 0.25
              - &post_transforms
                _target_: albumentations.Compose
                transforms:
                  - _target_: albumentations.Normalize
                    mean: 0
                    std: 1
                  - _target_: albumentations.ToTensorV2
                additional_targets:
                  real_image: image
          low_resolution_image_key: image
          high_resolution_image_key: real_image
          download: true
        batch_size: 48
        shuffle: true
        num_workers: 8
        pin_memory: true
        drop_last: true

      valid:
        << : [*train_loader]
        dataset:
          << : [*train_dataset]
          train: false
          transform: *post_transforms
        batch_size: 1
        drop_last: false

    criterion: &criterions
      content_loss:
        # `torch.nn.L1Loss` | `torch.nn.MSELoss`
        _target_: torch.nn.L1Loss

    optimizer:
      _key_value: true

      generator_optimizer:
        _target_: torch.optim.AdamW
        lr_linear_scaling:
          lr: 0.0002
          base_batch_size: &base_batch_size 16
        weight_decay: 0.0
        _model: *generator_model

    scheduler:
      _key_value: true

      generator_scheduler:
        _target_: torch.optim.lr_scheduler.MultiStepLR
        milestones: [8,20,28]
        gamma: 0.5
        _optimizer: generator_optimizer

    callbacks: &callbacks
      psnr_metric:
        _target_: catalyst.callbacks.FunctionalMetricCallback
        metric_fn:
          _target_: piq.psnr
          data_range: 1.0
          reduction: mean
          convert_to_greyscale: false
        input_key: real_image
        target_key: fake_image
        metric_key: psnr
      ssim_metric:
        _target_: catalyst.callbacks.FunctionalMetricCallback
        metric_fn:
          _target_: piq.ssim
          kernel_size: 11
          kernel_sigma: 1.5
          data_range: 1.0
          reduction: mean
          k1: 0.01
          k2: 0.03
        input_key: real_image
        target_key: fake_image
        metric_key: ssim

      loss_content:
        _target_: catalyst.callbacks.CriterionCallback
        input_key: real_image
        target_key: fake_image
        metric_key: loss_content
        criterion_key: content_loss

      optimizer_generator:
        _target_: catalyst.callbacks.OptimizerCallback
        metric_key: loss_content
        model_key: *generator_model
        optimizer_key: generator_optimizer
        grad_clip_fn: &grad_clip_fn
          _mode_: partial
          _target_: torch.nn.utils.clip_grad_value_
          clip_value: 5.0

      scheduler_generator:
        _target_: catalyst.callbacks.SchedulerCallback
        scheduler_key: generator_scheduler
        loader_key: valid
        metric_key: loss_content

  stage2_gan:
    num_epochs: 16

    loaders:
      << : [*loaders]
      train:
        << : [*train_loader]
        dataset:
          << : [*train_dataset]
          transform:
            _target_: albumentations.Compose
            transforms:
              - *spatial_transforms
              - *post_transforms
        batch_size: 32

    criterion:
      << : [*criterions]

      perceptual_loss:
        _target_: esrgan.criterions.PerceptualLoss
        layers:
          conv5_4: 1.0

      # TODO: fix GAN losses
      adversarial_generator_loss:
        # `esrgan.criterions.RelativisticAdversarialLoss` | `esrgan.criterions.AdversarialLoss`
        _target_: &adversarial_criterion esrgan.criterions.RelativisticAdversarialLoss
        mode: generator
      adversarial_discriminator_loss:
        _target_: *adversarial_criterion
        mode: discriminator

    optimizer:
      _key_value: true

      generator_optimizer:
        _target_: torch.optim.AdamW
        lr_linear_scaling:
          lr: 0.00003
          base_batch_size: *base_batch_size
        weight_decay: 0.0
        _model: *generator_model

      discriminator_optimizer:
        _target_: torch.optim.AdamW
        lr_linear_scaling:
          lr: 0.0001
          base_batch_size: *base_batch_size
        weight_decay: 0.0
        _model: *discriminator_model

    scheduler:
      _key_value: true

      generator_scheduler:
        _target_: torch.optim.lr_scheduler.MultiStepLR
        milestones: [16,24,32]
        gamma: 0.5
        _optimizer: generator_optimizer

      discriminator_scheduler:
        _target_: torch.optim.lr_scheduler.MultiStepLR
        milestones: [8,16,24,32]
        gamma: 0.5
        _optimizer: discriminator_optimizer

    callbacks:
      # re-use `psnr_metric`, `ssim_metric`, and `loss_content` callbacks
      << : [*callbacks]

      loss_perceptual:
        _target_: catalyst.callbacks.CriterionCallback
        input_key: real_image
        target_key: fake_image
        metric_key: loss_perceptual
        criterion_key: perceptual_loss
      loss_adversarial:
        _target_: catalyst.callbacks.CriterionCallback
        input_key: g_fake_logits  # first argument of criterion is fake_logits
        target_key: g_real_logits  # second argument of criterion is real_logits
        metric_key: loss_adversarial
        criterion_key: adversarial_generator_loss
      loss_generator:
        _target_: catalyst.callbacks.MetricAggregationCallback
        metric_key: &generator_loss loss_generator
        metrics:
          loss_content: 0.01
          loss_perceptual: 1.0
          loss_adversarial: 0.05
        mode: weighted_sum

      loss_discriminator:
        _target_: catalyst.callbacks.CriterionCallback
        input_key: d_fake_logits
        target_key: d_real_logits
        metric_key: &discriminator_loss loss_discriminator
        criterion_key: adversarial_discriminator_loss

      optimizer_generator:
        _target_: catalyst.callbacks.OptimizerCallback
        metric_key: *generator_loss
        model_key: *generator_model
        optimizer_key: generator_optimizer
        grad_clip_fn: *grad_clip_fn
      optimizer_discriminator:
        _target_: catalyst.callbacks.OptimizerCallback
        metric_key: *discriminator_loss
        model_key: *discriminator_model
        optimizer_key: discriminator_optimizer
        grad_clip_fn: *grad_clip_fn

      scheduler_generator:
        _target_: catalyst.callbacks.SchedulerCallback
        scheduler_key: generator_scheduler
        loader_key: valid
        metric_key: *generator_loss
      scheduler_discriminator:
        _target_: catalyst.callbacks.SchedulerCallback
        scheduler_key: discriminator_scheduler
        loader_key: valid
        metric_key: *discriminator_loss
